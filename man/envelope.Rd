% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ClassGPR.R, R/envelope.R
\name{plotEnvelope}
\alias{plotEnvelope}
\alias{envelope}
\title{DEPRECATED - Plot the trace plotEnvelope}
\usage{
\S4method{plotEnvelope}{GPR}(
  x,
  npad = 100,
  FUN = mean,
  add = FALSE,
  all = FALSE,
  plotLog = TRUE,
  ...
)

\S4method{envelope}{GPR}(x, method = c("peak", "hilbert"), npad = 100, threshold = 2)
}
\arguments{
\item{x}{An object of the class GPR.}

\item{npad}{[\code{integer(1)}] Only for \code{method = "hilbert"}. Positive 
value defining the number of values to
pad \code{x} (the padding help to minimize the Gibbs effect at 
the beginning and end of the data caused by the Hilbert 
transform).}

\item{FUN}{DEPRECATED. A function to be applied on each row of the GPR data 
to estimate the wave amplitude as a function of time/depth.}

\item{add}{A length-one boolean vector. If TRUE the amplitude is plotted
on the previous plot. If FALSE (default) a new plot is created.}

\item{all}{A length-one boolean vector. If TRUE all trace envelope are 
plotted, if FALSE only the mean.}

\item{plotLog}{A length-one boolean vector. If TRUE the logarithm of the 
amplitude of every trace is ploted on the estimate amplitude.
Default is FALSE.}

\item{method}{[\code{character}] Method to use. See details.}

\item{threshold}{[\code{numeric(1)}] Threshold value for peak detection. The
larger the value, the longer the computation time.}
}
\description{
Plot the amplitude envelope of each trace. See \code{envelope}.

Estimate for each trace the amplitude envelope with the Hilbert
transform (instataneous amplitude).
}
\details{
Two methods:
\itemize{
 \item \code{hilbert} Envelope based on the Hilbert transform
  \item  \code{peak} The local maxima of the absolute values of the
         signal are first estimated. The envelope is determined using spline 
         interpolation over local maxima.
 }
}
\examples{
data(frenkeLine00)
plotAmpl(frenkeLine00, FUN = median)
x <- frenkeLine00

plot(x[,10], lwd = 2)
lines(abs(x[,10]), col = "blue")
lines(envelope(x[,10], method = "hilbert"), col = "red")
lines(envelope(x[,10], method = "peak"), col = "green")

}
