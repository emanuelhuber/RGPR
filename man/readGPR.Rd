% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/readFiles.R
\name{readGPR}
\alias{readGPR}
\title{Read a GPR data file}
\usage{
readGPR(
  dsn,
  desc = "",
  dsn2 = NULL,
  format = NULL,
  Vmax = NULL,
  fPath,
  ch = 1,
  verbose = TRUE,
  interp_pos = TRUE,
  toUTM = TRUE,
  method = c("linear", "linear", "linear"),
  endian = .Platform$endian
)
}
\arguments{
\item{dsn}{data source name: either the filepath to the GPR data (character),
or an open file connection (can be a list of filepahts or
open file connections)}

\item{desc}{Short description of the file (character).}

\item{dsn2}{deprecated}

\item{format}{lenth-one character vector required if the file extension is
not appearent in the filepath or the connection (either
\code{dt1}, \code{rad}, \code{dzt}, \code{sgy}, \code{iprb},
\code{txt}, \code{rds})}

\item{Vmax}{length-one numeric vector: nominal analog input voltage used 
for the bits to volt transformation. 
It assumes that \code{Vmin = -Vmax}. If \code{Vmax = NULL}, the 
default values depending on the file format and given by the
GPR device manufacturer will be used. If \code{Vmax = FALSE},
no bits to Volt transformation is applied (i.e., the bit values
are returned).}

\item{fPath}{Filepath (character). DEPRECATED. Use \code{dsn} instead.}

\item{ch}{For multi-frequency GSSI files (*.dzt), which channel is red.}

\item{verbose}{(boolean). If \code{FALSE}, all messages and warnings are
suppressed (use with care).}

\item{interp_pos}{logical: should the trace position be interpolated if possible? TRUE or FALSE}

\item{toUTM}{logical: if \code{TRUE} project GPS coordinates (WGS84) to
the corresponding UTM coordinate reference system.}

\item{method}{A length-three character vector defining the interpolation
methods (same methods as in \code{signal::interp1}:
"linear", "nearest", "pchip", "cubic", and "spline"). 
First element for the interpolation of the 
inter-trace distances, 
second element for the interpolation of the horizontal 
trace positions, and third element for the interpolation
of the vertical trace positions.}

\item{endian}{The endian-ness (\code{"big"} or \code{"little"}) of the 
target system for 
the file. Default value is \code{.Platform$endian}. 
If the endianness is not correct, RGPR will automatically 
detect it and try the other endianness. That means that it is 
not necessary to set the correct endianness 
(but if you do so, 'readGPR()' will be faster).}
}
\value{
The GPR data as object of the class RGPR.
}
\description{
Note: argument \code{fPath} is depreacted. Use \code{dsn} instead.
}
\details{
Supported file format
\itemize{
  \item Sensors & Software file format (*.dt1 , *.hd, *.gps).
        \code{readGPR(dsn = 'xline.dt1')}
  \item MALA file format (*.rd3/*.rd7, *.rad, *.cor).
        \code{readGPR(dsn = 'xline.rd3')}
  \item ImpulseRadar file format  (*.iprb, *.iprh, *.cor, *.time).
        \code{readGPR(dsn = 'xline.iprb')}
  \item GSSI file format (*.dzt, *.dzx, *.dzg).
        \code{readGPR(dsn = 'xline.dzt')}
  \item Geomatrix Earth Science Ltd file format (*.sgpr).
        \code{readGPR(dsn = 'xline.sgpr')}
  \item Transient Technologies (*.dat, *.hdr, *.gpt, *.gps).
  \item IDS (*.dt, *.gec).
        \code{readGPR(dsn = 'xline.dt')}
  \item SEG-Y file format (*.sgy/*.segy).
        \code{readGPR(dsn = 'xline.sgy')} 
  \item SEG-2 file format (*.sg2/*.seg2).
        \code{readGPR(dsn = 'xline.sg2')}  
  \item RadSys Zond GPR device (*.sgy). 
        \strong{Note: it is not the SEG-Y file format)}.
        \code{readGPR(dsn = 'xline.sgy')}
  \item US Radar (*.RA1*, *RA2*, *RAD*). 
        \code{readGPR(dsn = 'xline.RA1')}  
  \item ASCII file format (*.txt): either 4-column format 
        (x,t,amplitude) or matrix-format (without header/rownames).
        \code{readGPR(dsn = 'xline.txt')}  
  \item GPRmax file format (*.out): hdf5
  \item R object file format (*rds). These files are created by saving the
        \code{GPR} object with 
        \code{writeGPR(x, fPath = 'xline.rds', type = "rds")}.
        \code{readGPR(dsn = 'xline.txt')}  
}
}
\section{GSSI files (*.dzt)}{

The first trace sample is constant and does not belong to the signal 
(no idea what is does mean). 
That is why RGPR removes the first sample of each trace.
The second sample of each trace is used to indicate if there is a fiducial 
marker. RGPR extracts this information (maybe not always correctly) and 
removes the second sample of each trace. That is the reason why the *.dzt 
files exported by RGPR have two samples/trace less.
}

\section{Mala files (*.rd3/rd7, *.rad)}{

RGPR check the dimension of the data against the number of traces and 
samples specified in the *.rad file and try to find the correct setup.
}

\examples{
\dontrun{
# argument dsn is a file path
x1 <- readGPR(dsn = "data/RD3/DAT_0052.rd3")
y1 <- readGPR("data/FILE____050.DZT")

# argument dsn is a connection
con <- file("data/RD3/DAT_0052.rd3", "rb")   # binary mode
con2 <- file("data/RD3/DAT_0052.rad", "rt")  # text mode
x2 <- readGPR(dsn = con, dsn2 = con2)
close(con)
close(con2)

con <- file(dsn = "data/FILE____050.DZT", "rb")
y1 <- readGPR(con)
close(con)
}
}
\seealso{
\code{\link{writeGPR}}
}
